{"version":3,"sources":["components/views/SignedinLinks.js","store/actions/authActions.js","components/views/SignedoutLinks.js","components/views/Navbar.js","components/dashboard/Notifications.js","components/tasks/TaskSummary.js","components/tasks/TaskList.js","components/dashboard/Dashboard.js","components/tasks/TaskDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/tasks/NewTask.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedoutLinks","state","firebase","links","uid","views_SignedinLinks","views_SignedoutLinks","Link","Notifications","notifications","console","log","map","item","key","id","user","content","moment","time","toDate","fromNow","TaskSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","TaskList","projects","tasks_TaskSummary","Dashboard","_this$props","this","tasks_TaskList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","inputChangeHandler","e","_this","setState","Object","defineProperty","target","value","formSubmitHandler","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","handleChange","handleSubmit","signUp","creds","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","NewTask","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","views_Navbar","Switch","Route","exact","path","component","TaskDetails","Signup","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAsBeA,cAAQ,KAPI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,ECDV,SAACA,EAAUE,EAAXC,IACYC,EAD6BD,EAAlBC,eAGnBC,OAAOJ,UAAUK,KAAM,WAC9BN,EAAS,CAAEO,KAAM,4BDERR,CAjBO,SAACS,GACrB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,aACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQI,QAAUP,EAAMP,QAAUW,UAAU,oDAA5C,WACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,wCAAyCJ,EAAMQ,QAAQC,cEG5EC,EAVQ,WACrB,OACET,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCqBKf,cAPS,SAACoB,GACvB,MAAO,CACLd,KAAMc,EAAMC,SAASf,KACrBW,QAASG,EAAMC,SAASJ,UAIbjB,CAtBA,SAACS,GAAU,IAChBH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACRK,EAAQhB,EAAKiB,IAAMb,EAAAC,EAAAC,cAACY,EAAD,CAAeP,QAAUA,IAAcP,EAAAC,EAAAC,cAACa,EAAD,MAEhE,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAG,IAAIF,UAAU,mBAAvB,gBACES,uBCgBKK,EA3BQ,SAAClB,GAAU,IAExBmB,EAAkBnB,EAAlBmB,cAER,OADAC,QAAQC,IAAIrB,GAEVC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBAEAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVe,GAAiBA,EAAcG,IAAK,SAAAC,GACpC,OACEtB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKD,EAAKE,IACZxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAamB,EAAKG,KAAlC,KACAzB,EAAAC,EAAAC,cAAA,YAAOoB,EAAKI,SACZ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBwB,IAAOL,EAAKM,KAAKC,UAAUC,mBCJpEC,EAZK,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACrB,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAe8B,EAAQC,OACvClC,EAAAC,EAAAC,cAAA,sBAAe+B,EAAQE,gBAAvB,IAA2CF,EAAQG,gBACnDpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAcwB,IAAOM,EAAQI,UAAUR,SAASS,YAAYC,eCUlEC,EAfE,SAAAR,GAAkB,IAAfS,EAAeT,EAAfS,SAElB,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXsC,GAAYA,EAASpB,IAAK,SAAAY,GAC1B,OACEjC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAK,YAAc4B,EAAQT,GAAKD,IAAMU,EAAQT,IAClDxB,EAAAC,EAAAC,cAACwC,EAAD,CAAaT,QAAUA,kCCH7BU,mLAEK,IAAAC,EACmCC,KAAK9C,MAAvC0C,EADDG,EACCH,SAAUvB,EADX0B,EACW1B,cAElB,OAHO0B,EAC0BhD,KAEtBiB,IAGTb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC4C,EAAD,CAAUL,SAAUA,KAEtBzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC6C,EAAD,CAAe7B,cAAeA,OATdlB,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,mBALjB4C,aA+BTC,cACb5D,YAVsB,SAACoB,GAEvB,OADAS,QAAQC,IAAIV,GACL,CACL+B,SAAU/B,EAAMyC,UAAUC,QAAQX,SAClCvB,cAAeR,EAAMyC,UAAUC,QAAQlC,cACvCtB,KAAMc,EAAMC,SAASf,QAMvByD,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbP,GCCaO,cACb5D,YAXsB,SAACoB,EAAO+C,GAC9B,IAAMjC,EAAKiC,EAASC,MAAMC,OAAOnC,GAC3BiB,EAAW/B,EAAMyC,UAAUS,KAAKnB,SAEtC,MAAO,CACLR,QAFcQ,EAAWA,EAASjB,GAAM,KAGxC5B,KAAMc,EAAMC,SAASf,QAMvByD,2BAAiB,CACf,CAAEC,WAAY,cAHHJ,CAvCK,SAACnD,GAAU,IACrBkC,EAAkBlC,EAAlBkC,QAER,OAF0BlC,EAATH,KAIbqC,EAEAjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAe8B,EAAQC,MAAvC,KACAlC,EAAAC,EAAAC,cAAA,SAAK+B,EAAQP,UAEf1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACfH,EAAAC,EAAAC,cAAA,wBAAiB+B,EAAQE,gBAAzB,IAA6CF,EAAQG,gBACrDpC,EAAAC,EAAAC,cAAA,WAAOyB,IAAOM,EAAQI,UAAUR,SAASS,YAAYC,eAOvDvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,6BApBYF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,sBCL3BwD,6MAEJnD,MAAQ,CACNoD,MAAO,GACPC,SAAU,MAGZC,mBAAqB,SAACC,GACpBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAI5BC,kBAAoB,SAACP,GACnBA,EAAEQ,iBACFP,EAAKnE,MAAM2E,OAAOR,EAAKxD,gFAGhB,IAAAkC,EACqBC,KAAK9C,MAAzB4E,EADD/B,EACC+B,UACR,OAFO/B,EACYhD,KACTiB,IAAab,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,MAGlCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkByE,SAAW/B,KAAK2B,mBAChDxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ0B,GAAG,QAAQsD,SAAWjC,KAAKmB,sBAGjDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW0B,GAAG,WAAWsD,SAAWjC,KAAKmB,sBAGvDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAKyE,GAAkB,gBAvC9B1B,aA6DN3D,cAbS,SAACoB,GACvB,MAAO,CACLiE,UAAWjE,EAAMd,KAAK+E,UACtB/E,KAAMc,EAAMC,SAASf,OAIE,SAACL,GAC1B,MAAO,CACLmF,OAAQ,SAACK,GAAD,OAAiBxF,ER9DP,SAACwF,GACrB,OAAO,SAACxF,EAAUE,EAAXuC,IACYrC,EAD6BqC,EAAlBrC,eAGnBC,OAAOoF,2BACdD,EAAYjB,MACZiB,EAAYhB,UACZlE,KAAM,WACNN,EAAS,CAAEO,KAAM,oBAChBmF,MAAO,SAACC,GACT3F,EAAS,CAAEO,KAAM,cAAeoF,WQoDAR,CAAOK,OAI9BzF,CAA6CuE,GC7DtDsB,6MACJzE,MAAQ,CACNoD,MAAO,GACPC,SAAU,GACVqB,UAAW,GACXC,SAAU,MAEZC,aAAe,SAACrB,GACdC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAG5BgB,aAAe,SAACtB,GACdA,EAAEQ,iBACFP,EAAKnE,MAAMyF,OAAOtB,EAAKxD,gFAEhB,IAAAkC,EACqBC,KAAK9C,MAAzBH,EADDgD,EACChD,KAAM+E,EADP/B,EACO+B,UACd,OAAI/E,EAAKiB,IAAYb,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,MAGhCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQyE,SAAU/B,KAAK0C,cACrCvF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ0B,GAAG,QAAQsD,SAAUjC,KAAKyC,gBAEhDtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW0B,GAAG,WAAWsD,SAAUjC,KAAKyC,gBAEtDtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,aAAf,cACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,YAAYsD,SAAUjC,KAAKyC,gBAEnDtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,aACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,WAAWsD,SAAUjC,KAAKyC,gBAElDtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAIyE,GAAiB,gBA3C5B1B,aAiEN3D,cAbS,SAACoB,GACvB,MAAO,CACLd,KAAMc,EAAMC,SAASf,KACrB+E,UAAWjE,EAAMd,KAAK+E,YAIC,SAACpF,GAC1B,MAAO,CACLiG,OAAQ,SAACC,GAAD,OAAWlG,GTzCAmG,ESyCgBD,ETxC9B,SAAClG,EAAUE,EAAXkG,GAAuD,IAAhChG,EAAgCgG,EAAhChG,YAAaiG,EAAmBD,EAAnBC,aACnCjF,EAAWhB,IACXwD,EAAYyC,IAElBjF,EAASf,OAAOiG,+BACdH,EAAQ5B,MACR4B,EAAQ3B,UACRlE,KAAM,SAACiG,GACP,OAAO3C,EAAUG,WAAW,SAASyC,IAAKD,EAAIrE,KAAKZ,KAAMmF,IAAI,CAC3DZ,UAAWM,EAAQN,UACnBC,SAAUK,EAAQL,SAClB7E,SAAUkF,EAAQN,UAAU,GAAKM,EAAQL,SAAS,OAEnDxF,KAAM,WACPN,EAAS,CAAEO,KAAM,sBAChBmF,MAAO,SAACC,GACT3F,EAAS,CAAEO,KAAM,gBAAiBoF,aAjBlB,IAACQ,KS6CRpG,CAA6C6F,WCjEtDc,6MAEJvF,MAAQ,CACNwB,MAAM,GACNR,QAAS,MAGXsC,mBAAqB,SAACC,GACpBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAI5BC,kBAAoB,SAACP,GACnBA,EAAEQ,iBACFP,EAAKnE,MAAMmG,cAAchC,EAAKxD,OAC9BwD,EAAKnE,MAAMoG,QAAQC,KAAK,8EAOxB,OAFiBvD,KAAK9C,MAAdH,KAKNI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkByE,SAAW/B,KAAK2B,mBAChDxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,QAAQsD,SAAWjC,KAAKmB,sBAGhDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,WAAf,WACA7E,EAAAC,EAAAC,cAAA,YAAUsB,GAAG,UAAUsD,SAAWjC,KAAKmB,mBAAqB7D,UAAU,0BAGxEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAAlB,aAjBUH,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,mBAvBb4C,aA4DP3D,cAZS,SAACoB,GACvB,MAAO,CACLd,KAAMc,EAAMC,SAASf,OAIE,SAACL,GAC1B,MAAO,CACL2G,cAAe,SAACjE,GAAD,OAAa1C,EC7DH,SAAC0C,GAC5B,OAAO,SAAC1C,EAAUE,EAAXuC,GAAuDA,EAAhCrC,YAAgC,IAEtDwD,GAAYyC,EAF0C5D,EAAnB4D,gBAGnCrF,EAAUd,IAAWkB,SAASJ,QAC9B8F,EAAW5G,IAAWkB,SAASf,KAAKiB,IAG1CsC,EAAUG,WAAW,YAAYgD,IAAjClC,OAAAmC,EAAA,EAAAnC,CAAA,GACKnC,EADL,CAEEE,gBAAiB5B,EAAQ6E,UACzBhD,eAAgB7B,EAAQ8E,SACxBgB,SAAUA,EACVhE,UAAW,IAAImE,QACd3G,KAAM,WACPN,EAAS,CAAEO,KAAM,iBAAkBmC,cAClCgD,MAAO,SAACC,GACT3F,EAAS,CAAEO,KAAM,uBAAwBoF,WD4CNgB,CAAcjE,OAIxC3C,CAA6C2G,GErC7CQ,mLAjBX,OACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrE,IACjC3C,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWC,IACtCjH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWnD,IACjC7D,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWE,IACjClH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,cAX3BhD,aCGEkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5D,MACvB,2DClBN,IAAM6D,EAAY,CAChB5C,UAAW,MA8CE6C,EA3CK,WAA+B,IAA9B9G,EAA8B+G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAOC,EAAO9H,MACZ,IAAK,cAEL,OADAqB,QAAQC,IAAI,eACLgD,OAAAmC,EAAA,EAAAnC,CAAA,GACF1D,EADL,CAEEiE,UAAW,iBAGb,IAAK,gBAEL,OADAxD,QAAQC,IAAI,iBACLgD,OAAAmC,EAAA,EAAAnC,CAAA,GACF1D,EADL,CAEEiE,UAAW,OAGb,IAAK,mBAEL,OADAxD,QAAQC,IAAI,oBACLgD,OAAAmC,EAAA,EAAAnC,CAAA,GACF1D,EADL,CAEEiE,UAAW,OAGb,IAAK,kBAEL,OADAxD,QAAQC,IAAI,mBACLgD,OAAAmC,EAAA,EAAAnC,CAAA,GACF1D,EADL,CAEEiE,UAAW,OAGb,IAAK,gBAEL,OADAxD,QAAQC,IAAI,iBACLgD,OAAAmC,EAAA,EAAAnC,CAAA,GACF1D,EADL,CAEEiE,UAAWiD,EAAO1C,IAAI2C,UAGxB,QACA,OAAOnH,ICxCL6G,EAAY,CAChB9E,SAAU,CACR,CAACjB,GAAI,IAAKU,MAAO,qBAAsBR,QAAS,kBAChD,CAACF,GAAI,IAAKU,MAAO,wBAAyBR,QAAS,kBACnD,CAACF,GAAI,IAAKU,MAAO,sBAAuBR,QAAS,oBAoBtCoG,EAhBQ,WAA+B,IAA9BpH,EAA8B+G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAO9H,MAEb,IAAK,iBAEH,OADAqB,QAAQC,IAAI,kBAAmBwG,EAAO3F,SAC/BvB,EAET,IAAK,uBAEH,OADAS,QAAQC,IAAI,4BAA6BwG,EAAO1C,KACzCxE,EAET,QACE,OAAOA,YCTEqH,EAPKC,YAAgB,CAClCpI,KAAM4H,EACNvF,QAAS6F,EACT3E,UAAW8E,mBACXtH,SAAUuH,4DCKVvH,IAASwH,cAVI,CACXC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,iBAKrB9H,IAASwC,YAAYuF,SAAS,CAC5BC,uBAAuB,IAGVhI,QAAf,ECPIiI,EAAQC,YAAYd,EACxB7E,YACE4F,YAAgBC,IAAMC,kBAAkB,CAAEpD,4BAAcjG,6BACxDsJ,yBAAeC,GACfC,6BAAmBD,EAAgB,CACjCE,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,MAKzBV,EAAMW,oBAAoB1J,KAAM,WAC9B2J,IAASC,OAAOzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAUd,MAAOA,GAAO5I,EAAAC,EAAAC,cAACyJ,EAAD,OAAoBC,SAASC,eAAe,SLmGhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnK,KAAK,SAAAoK,GACjCA,EAAaC","file":"static/js/main.a090061f.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedinLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/create\">New Task</NavLink></li>\n      <li><button onClick={ props.signOut } className=\"btn waves-effect waves-light blue-grey lighten-2\">Logout</button></li>\n      <li><NavLink to=\"/\" className=\"btn btn-floating blue-grey lighten-2\">{ props.profile.initials }</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignedinLinks)\n\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then( () =>  {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch( (err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then( () => {\n      dispatch({ type: 'SIGN_OUT_SUCCESS' });\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then( (res) =>  {\n      return firestore.collection('users').doc( res.user.uid ).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then( () => {\n      dispatch({ type: 'SIGN_UP_SUCCESS' });\n    }).catch( (err) => {\n      dispatch({ type: 'SIGN_UP_ERROR', err });\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedoutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\n    </ul>\n  )\n}\n\n\nexport default SignedoutLinks\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedinLinks from './SignedinLinks';\nimport SignedoutLinks from './SignedoutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedinLinks profile={ profile } /> :<SignedoutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper blue-grey\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo left\">Task Manager</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react'\nimport moment from 'moment'\n\n const Notifications = (props) => {\n\n  const { notifications } = props;\n  console.log(props);\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-1\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n\n          <ul className=\"notifications\">\n            { notifications && notifications.map( item =>  {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">{moment(item.time.toDate()).fromNow()}</div>\n                </li>\n              )\n            }) }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment';\n\nconst TaskSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-1 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{ project.title }</span>\n        <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n        <p className=\"grey-text\">{ moment(project.createdAt.toDate().toString()).calendar() }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default TaskSummary","import React from 'react'\nimport TaskSummary from './TaskSummary'\nimport { Link } from 'react-router-dom'\n\nconst TaskList = ({ projects }) => {\n  \n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map( project => {\n        return (\n          <Link to={ '/project/' + project.id } key={ project.id } >\n            <TaskSummary project={ project }/>\n          </Link>)\n      }) }  \n    </div>\n  )\n}\n\n\nexport default TaskList\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport TaskList from '../tasks/TaskList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n \nclass Dashboard extends Component {\n\n  render() {\n    const { projects, notifications, auth } = this.props;\n\n    if ( !auth.uid ) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <TaskList projects={projects}/>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    notifications: state.firestore.ordered.notifications,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\nconst TaskDetails = (props) => {\n  const { project, auth } = props;\n\n  if (!auth) return <Redirect to='/signin' />\n  \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{ project.title } </span>\n          <p>{ project.content }</p>\n        </div>\n        <div className=\"card-action grey lighten-5 grey-text\">\n        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n        <div>{ moment(project.createdAt.toDate().toString()).calendar() }</div>\n        </div>\n      </div>\n    </div>\n    )\n  } else {\n    return (\n      <div className=\"container\">\n        <p>Loading data...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n \nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(TaskDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass Signin extends Component {\n\n  state = {\n    email: '',\n    password: ''\n  }\n \n  inputChangeHandler = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  formSubmitHandler = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if ( auth.uid ) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form className=\"white z-depth-1\" onSubmit={ this.formSubmitHandler }>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={ this.inputChangeHandler } />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={ this.inputChangeHandler } />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink darken-3 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (credentials) => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom'\n\nclass NewTask extends Component {\n\n  state = {\n    title:'',\n    content: ''\n  }\n\n  inputChangeHandler = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  formSubmitHandler = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n\n  render() {\n    const { auth } = this.props;\n\n    if (!auth) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n        <form className=\"white z-depth-1\" onSubmit={ this.formSubmitHandler }>\n          <h5 className=\"grey-text text-darken-3\">Create new task</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={ this.inputChangeHandler }/>\n          </div>\n    \n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" onChange={ this.inputChangeHandler } className=\"materialize-textarea\"></textarea>\n          </div>\n    \n          <div className=\"input-field\">\n            <button className=\"btn pink darken-3 z-depth-0\">Create</button>\n          </div>\n        </form>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTask) \n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n\n\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then( () => {\n      dispatch({ type: 'CREATE_PROJECT', project });\n    }).catch( (err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    })\n  \n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/views/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport TaskDetails from './components/tasks/TaskDetails';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport NewTask from './components/tasks/NewTask';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={TaskDetails} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/create\" component={NewTask} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n    console.log('login error');\n    return { \n      ...state, \n      authError: 'Login failed'\n    }\n\n    case 'LOGIN_SUCCESS':\n    console.log('login success');\n    return {\n      ...state,\n      authError: null\n    }\n\n    case 'SIGN_OUT_SUCCESS':\n    console.log('sign out success');\n    return {\n      ...state,\n      authError: null\n    }\n\n    case 'SIGN_UP_SUCCESS':\n    console.log('sign up success');\n    return {\n      ...state,\n      authError: null\n    }\n\n    case 'SIGN_UP_ERROR':\n    console.log('sign up error');\n    return {\n      ...state,\n      authError: action.err.message\n    }\n\n    default:\n    return state;\n\n  }\n}\n\nexport default authReducer;","// import { createProject } from '../actions/projectActions';\n\nconst initState = {\n  projects: [\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch( action.type ) {\n\n    case 'CREATE_PROJECT' : \n      console.log('created project', action.project);\n      return state;\n\n    case 'CREATE_PROJECT_ERROR' :\n      console.log('oops something went wrong', action.err);\n      return state;\n\n    default: \n      return state;\n  }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n \nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","  import firebase from 'firebase/app'\n  import 'firebase/firestore'\n  import 'firebase/auth'\n\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyDAoit2HVAWnbX5ZW69REPAtLFeJN3-csU\",\n    authDomain: \"task-manager-946ad.firebaseapp.com\",\n    databaseURL: \"https://task-manager-946ad.firebaseio.com\",\n    projectId: \"task-manager-946ad\",\n    storageBucket: \"task-manager-946ad.appspot.com\",\n    messagingSenderId: \"971774856356\"\n  };\n\n\n  firebase.initializeApp(config);\n  firebase.firestore().settings({\n    timestampsInSnapshots: true\n  });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, { \n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true \n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then( () => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n});\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}